<?xml version="1.0"?>
<!-- ======================================================================
ANT Macrodef Build Script

- Runs various GitHub tasks

Author: Newtriks <simon@newtriks.com>
Date: 6th March 2010

This script is based on code written by:
Mark Lowe <melowe@gmail.com>
Tom Robinson <http://tlrobinson.net>
Scripts ripped from:
<http://tlrobinson.net/blog/2008/11/13/ant-tasks-for-git/>
and Comment by Timo on the above URL
====================================================================== -->
<project>
	<!-- = = = = = = = = = = = = = = = = =
macrodef: git
= = = = = = = = = = = = = = = = = -->
	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		<sequential>
			<echo file="GIT_COMMAND_LOG" message="git @{command} &#xa;" append="yes" />
			<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="git-init">
		<attribute name="repository" />
		<sequential>
			<git command="init">
				<args>
					<arg value="@{repository}" />
				</args>
			</git>
		</sequential>
	</macrodef>

	<macrodef name="git-add">
		<attribute name="path" />
		<attribute name="target" />
		<sequential>
			<git command="add" dir="@{path}">
				<args>
					<arg value="@{target}" />
				</args>
			</git>
		</sequential>
	</macrodef>

	<macrodef name="git-commit">
		<attribute name="path" />
		<attribute name="message" />
		<sequential>
			<git command="commit" dir="@{path}">
				<args>
					<arg value="@{message}" />
				</args>
			</git>
		</sequential>
	</macrodef>

	<macrodef name="git-submodule-update">
		<sequential>
			<git command="submodule">
				<args>
					<arg value="update" />
					<arg value="--rebase" />
					<arg value="--recursive" />
				</args>
			</git>
		</sequential>
	</macrodef>

	<macrodef name="git-clone-pull">
		<attribute name="repository" />
		<attribute name="dest" />
		<sequential>
			<git command="clone">
				<args>
					<arg value="@{repository}" />
					<arg value="@{dest}" />
				</args>
			</git>
			<git command="pull" dir="@{dest}" />
		</sequential>
	</macrodef>

	<macrodef name="git-remote-add">
		<attribute name="path" />
		<attribute name="branch" />
		<attribute name="repository" />
		<sequential>
			<git command="remote" dir="@{path}">
				<args>
					<arg value="add" />
					<arg value="@{branch}" />
					<arg value="@{repository}" />
				</args>
			</git>
		</sequential>
	</macrodef>

	<macrodef name="git-push">
		<attribute name="path" />
		<attribute name="branch" />
		<attribute name="head" />
		<sequential>
			<git command="push" dir="@{path}">
				<args>
					<arg value="@{branch}" />
					<arg value="@{head}" />
				</args>
			</git>
		</sequential>
	</macrodef>

	<macrodef name="git-archive">
		<attribute name="ref" default="HEAD" />
		<attribute name="output" />
		<element name="files" />
		<sequential>
			<git command="archive">
				<args>
					<arg value="@{ref}" />
					<arg value="-o" />
					<arg value="@{output}" />
					<arg value="--" />
					<files />
				</args>
			</git>
		</sequential>
	</macrodef>

	<macrodef name="git-authors">
		<attribute name="dir" default="" />
		<attribute name="range" default="HEAD" />
		<sequential>
			<exec executable="git" outputproperty="rawauthors" dir="@{dir}">
				<arg value="log" />
				<arg value="@{range}" />
				<arg value="--format=%aN &lt;%aE&gt;" />
			</exec>
			<exec executable="sort" inputstring="${rawauthors}" outputproperty="authors">
				<arg value="-u" />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="git-tracking">
		<attribute name="dir" default="" />
		<sequential>
			<exec executable="git" outputproperty="branchvv" dir="@{dir}">
				<arg value="branch" />
				<arg value="-vv" />
			</exec>
			<exec executable="sed" inputstring="${branchvv}" outputproperty="tracking">
				<arg value="s/.*\[\([a-zA-Z0-9\/]*\).*/\1/" />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="git-remote-repo">
		<attribute name="dir" default="" />
		<sequential>
			<exec executable="git" outputproperty="remotev" dir="@{dir}">
				<arg value="remote" />
				<arg value="-v" />
			</exec>
			<exec executable="awk" inputstring="${remotev}" outputproperty="remote">
				<arg value='{ if($3 ~ "fetch") { print $2 } }' />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="git-up2date">
		<attribute name="branch" default="master"/>
		<sequential>
			<exec executable="git" outputproperty="git.head">
				<arg value="rev-parse" />
				<arg value="--verify" />
				<arg value="HEAD" />
			</exec>
			<exec executable="git" outputproperty="git.remote">
				<arg value="rev-parse" />
				<arg value="--verify" />
				<arg value="origin/@{branch}" />
			</exec>
			<exec executable="git" outputproperty="git.out">
				<arg value="status" />
				<arg value="-uno" />
				<arg value="-s" />
			</exec>
			<fail message="Branch is not up to date (or you are not on @{branch})">
				<condition>
					<not>
						<contains string="${git.head}" substring="${git.remote}" />
					</not>
				</condition>
			</fail>
			<fail message="Modified files exist, please commit">
				<condition>
					<not>
						<contains string="" substring="${git.out}" />
					</not>
				</condition>
			</fail>
		</sequential>
	</macrodef>

	<macrodef name="git-revision">
		<attribute name="path" />
		<attribute name="output" />
		<sequential>
			<exec executable="git" outputproperty="head" dir="@{path}">
				<arg value="rev-parse" />
				<arg value="HEAD" />
			</exec>
			<echo file="GIT_REVISION_LOG" message="Found revision: ${head}" />
			<exec executable="git" outputproperty="dirty">
				<arg value="diff" />
				<arg value="--shortstatt" />
			</exec>
			<condition property="@{output}" value="${head}" else="${head} (dirty)">
				<equals arg1="${dirty}" arg2="" />
			</condition>
		</sequential>
	</macrodef>
</project>
